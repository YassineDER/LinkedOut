name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.7

    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build Docker images
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend

    - name: Push Docker images
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.7

    - name: Copy docker-compose.yml and nginx.conf to VM
      uses: garygrossgarten/github-action-scp@release
      with:
        host: ${{ secrets.VM_HOST }}
        local: 'docker/docker-compose.yml'
        username: ${{ secrets.VM_USER }}
        remote: '/home/${{ secrets.VM_USER }}/linkedout/docker-compose.yml'
        privateKey: ${{ secrets.SSH_PRIVATE }}

    - name: Deploying to remote VM
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE }}
        script: |
          cd ~/linkedout
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest
          sudo docker compose -f docker-compose.yml down
          sudo docker compose -f docker-compose.yml up -d

    - name: Compile frontend and refresh nginx
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.SSH_PRIVATE }}
        script: |
          git clone --depth 1 --no-checkout git@github.com:YassineDER/LinkedOut.git
          cd LinkedOut && git sparse-checkout set frontend && git checkout
          cd frontend
          sudo cp -f ./nginx.conf /etc/nginx/nginx.conf
          npm install
          npm run build
          sudo mv dist/broswer/* /var/www/html/
          sudo systemctl restart nginx.service
