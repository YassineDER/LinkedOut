name: Alternate CI/CD (Cloud Run)

on:
  push:
    branches:
      - cloudrun

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.7

    # - name: Set up Java 17
    #   uses: actions/setup-java@v4
    #   with:
    #     distribution: 'temurin'
    #     java-version: '17'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        service_account: 'owner-318@tinypet-404519.iam.gserviceaccount.com'

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Build and push the container image
      run: |
        gcloud builds submit --pack image=gcr.io/$PROJECT_ID/linkedout-repo/backend --tag gcr.io/$PROJECT_ID/linkedout-repo/backend ./backend
      

    # - name: Install frontend dependencies
    #   run: |
    #     cd frontend
    #     npm install -g @angular/cli
    #     npm install -g angular-cli-ghpages
    #     npm install

    # - name: Copy docker-compose.yml to VM
    #   uses: garygrossgarten/github-action-scp@release
    #   with:
    #     host: ${{ secrets.VM_HOST }}
    #     local: 'docker-compose.yml'
    #     username: ${{ secrets.VM_USER }}
    #     remote: '/home/${{ secrets.VM_USER }}/linkedout/docker-compose.yml'
    #     privateKey: ${{ secrets.SSH_PRIVATE }}

    # - name: Deploying Postgres database container
    #   uses: appleboy/ssh-action@v1.0.3
    #   with:
    #     host: ${{ secrets.VM_HOST }}
    #     username: ${{ secrets.VM_USER }}
    #     key: ${{ secrets.SSH_PRIVATE }}
    #     script: |
    #       cd ~/linkedout
    #       sudo docker compose -f docker-compose.yml down
    #       sudo docker compose -f docker-compose.yml up -d

    # - name: Build and deploy the frontend
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    #   run: |
    #     cd frontend
    #     ng build --base-href /LinkedOut/ --configuration production
    #     ngh --dir=dist/browser --no-silent
